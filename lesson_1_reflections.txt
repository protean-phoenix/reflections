How did viewing a diff between two versions of a file help you see the bug
that was introduced?

By using diff I was able to pinpoint locations of difference between
the versions without searching manually.

How could having easy access to the entire history of a file make you a
more efficient programmer in the long term?

If there is a mistake in the most recent version or if you ever want
to revisit a previous version then you can easily see previous version
instead of having to guess what was in previous versions.

What do you think are the pros and cons of manually choosing when to
create a commit, like you do in Git, vs having versions automatically
saved, like Google Docs does?

You can make logical versions but you can forget to make the versions.

Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each
file separately?

It is important for a version control system that was intended to be used
with programming files to be able to save multiple files in one commit
because often times programming files are linked to other files.

How can you use the commands git log and git diff to view the history
of files?

git log can be used to see a wid history of files with comments while
git diff can be used to compare 2 specific files.

How might using version control make you more confident to make
changes that could break something?

You know you can always revert back to a previous state.

Now that you have your workspace set up, what do you want to try
using Git for?

Python programming